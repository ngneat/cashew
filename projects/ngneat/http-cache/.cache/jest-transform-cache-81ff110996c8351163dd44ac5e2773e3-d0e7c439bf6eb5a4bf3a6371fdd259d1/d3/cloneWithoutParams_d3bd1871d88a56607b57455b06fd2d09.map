{"file":"C:\\Users\\Itay\\projects\\opensources\\http-cache\\projects\\ngneat\\http-cache\\src\\lib\\cloneWithoutParams.ts","mappings":";;AAAA,6CAAkD;AAClD,+CAA8C;AAG9C,SAAgB,kBAAkB,CAAC,OAAyB,EAAE,SAAiB;IAC7E,IAAM,cAAc,GAAG,2BAAY,CAAC,OAAO,CAAC,CAAC;IAE7C,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC1B,MAAM,EAAE,IAAI,iBAAU,CAAC,EAAE,UAAU,EAAE,cAAc,EAAE,CAAC;KACvD,CAAC,CAAC;IAEF,KAA0B,CAAC,SAAS,GAAG,SAAS,CAAC;IAElD,OAAO,KAAyB,CAAC;AACnC,CAAC;AAVD,gDAUC","names":[],"sources":["C:\\Users\\Itay\\projects\\opensources\\http-cache\\projects\\ngneat\\http-cache\\src\\lib\\cloneWithoutParams.ts"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\nimport { filterParams } from './filterParams';\nimport { HttpCacheRequest } from './types';\n\nexport function cloneWithoutParams(request: HttpCacheRequest, customKey: string): HttpCacheRequest {\n  const filteredParams = filterParams(request);\n\n  const clone = request.clone({\n    params: new HttpParams({ fromObject: filteredParams })\n  });\n\n  (clone as HttpCacheRequest).customKey = customKey;\n\n  return clone as HttpCacheRequest;\n}\n"],"version":3}