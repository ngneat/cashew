{"file":"C:\\Users\\Itay\\projects\\opensources\\http-cache\\projects\\ngneat\\http-cache\\src\\lib\\httpCacheStorage.ts","mappings":";;;AACA,sCAA2C;AAC3C,iDAAgD;AAEhD;IAAA;IAKA,CAAC;IAAD,uBAAC;AAAD,CAAC,AALD,IAKC;AALqB,4CAAgB;AAQtC;IADA;QAEU,UAAK,GAAG,IAAI,GAAG,EAA6B,CAAC;IA2BvD,CAAC;IAzBC,qCAAG,GAAH,UAAI,GAAW;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,qCAAG,GAAH,UAAI,GAAW;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,qCAAG,GAAH,UAAI,GAAW,EAAE,QAA2B;QAC1C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAChC,CAAC;IAED,wCAAM,GAAN,UAAO,GAAqB;QAC1B,IAAI,CAAC,GAAG,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACnB,OAAO;SACR;QAED,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAa,CAAC,CAAC;YACjC,OAAO;SACR;QAED,6BAAa,CAAC,GAAa,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IA3BU,uBAAuB;QADnC,iBAAU,EAAE;OACA,uBAAuB,CA4BnC;IAAD,8BAAC;CAAA,AA5BD,IA4BC;AA5BY,0DAAuB","names":[],"sources":["C:\\Users\\Itay\\projects\\opensources\\http-cache\\projects\\ngneat\\http-cache\\src\\lib\\httpCacheStorage.ts"],"sourcesContent":["import { HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { deleteByRegex } from './deleteByRegex';\n\nexport abstract class HttpCacheStorage {\n  abstract has(key: string): boolean;\n  abstract get(key: string): HttpResponse<any>;\n  abstract set(key: string, response: HttpResponse<any>): void;\n  abstract delete(key?: string | RegExp): void;\n}\n\n@Injectable()\nexport class DefaultHttpCacheStorage implements HttpCacheStorage {\n  private cache = new Map<string, HttpResponse<any>>();\n\n  has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  get(key: string) {\n    return this.cache.get(key);\n  }\n\n  set(key: string, response: HttpResponse<any>): void {\n    this.cache.set(key, response);\n  }\n\n  delete(key?: string | RegExp): void {\n    if (!key) {\n      this.cache.clear();\n      return;\n    }\n\n    if (typeof key === 'string') {\n      this.cache.delete(key as string);\n      return;\n    }\n\n    deleteByRegex(key as RegExp, this.cache);\n  }\n}\n"],"version":3}