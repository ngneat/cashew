{"file":"C:\\Users\\Itay\\projects\\opensources\\http-cache\\projects\\ngneat\\http-cache\\src\\lib\\httpCacheConfig.ts","mappings":";;;AAAA,sCAA+C;AAUlC,QAAA,aAAa,GAAoB;IAC5C,QAAQ,EAAE,UAAU;IACpB,GAAG,EAAE;QACH,OAAO,EAAE,OAAO,CAAC,WAAW;KAC7B;CACF,CAAC;AAEF,SAAgB,WAAW,CAAC,MAAgC;IAC1D,4BACK,qBAAa,EACb,MAAM,IACT,GAAG,uBACE,qBAAa,CAAC,GAAG,EACjB,MAAM,CAAC,GAAG,KAEf;AACJ,CAAC;AATD,kCASC;AAUD,SAAgB,SAAS,CAAC,MAAmB;IAAnB,uBAAA,EAAA,WAAmB;IAC3C,OAAO;QACL,MAAM,qBACJ,MAAM,EAAE,IAAI,EACZ,IAAI,EAAE,MAAM,CAAC,IAAI,IACd,MAAM,CACV;KACF,CAAC;AACJ,CAAC;AARD,8BAQC;AAEY,QAAA,iBAAiB,GAAG,IAAI,qBAAc,CAAkB,oBAAoB,CAAC,CAAC","names":[],"sources":["C:\\Users\\Itay\\projects\\opensources\\http-cache\\projects\\ngneat\\http-cache\\src\\lib\\httpCacheConfig.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { CacheBucket } from './cacheBucket';\n\nexport interface HttpCacheConfig {\n  strategy: 'implicit' | 'explicit';\n  ttl: {\n    default?: number;\n  };\n}\n\nexport const defaultConfig: HttpCacheConfig = {\n  strategy: 'explicit',\n  ttl: {\n    default: 3600000 // One hour\n  }\n};\n\nexport function mergeConfig(config: Partial<HttpCacheConfig>) {\n  return {\n    ...defaultConfig,\n    ...config,\n    ttl: {\n      ...defaultConfig.ttl,\n      ...config.ttl\n    }\n  };\n}\n\ntype Params = {\n  cache$?: boolean;\n  ttl$?: number;\n  key$?: string;\n  bucket$?: CacheBucket,\n  [key: string]: any;\n};\n\nexport function withCache(params: Params = {}): any {\n  return {\n    params: {\n      cache$: true,\n      ttl$: params.ttl$,\n      ...params\n    }\n  };\n}\n\nexport const HTTP_CACHE_CONFIG = new InjectionToken<HttpCacheConfig>('HTTP_CAACHE_CONFIG');\n"],"version":3}