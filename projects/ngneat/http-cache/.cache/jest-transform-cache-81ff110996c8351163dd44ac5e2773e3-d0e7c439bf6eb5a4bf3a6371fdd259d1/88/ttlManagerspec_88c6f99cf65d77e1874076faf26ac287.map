{"file":"C:\\Users\\Itay\\projects\\opensources\\http-cache\\projects\\ngneat\\http-cache\\src\\lib\\test\\ttlManager.spec.ts","mappings":"AAAA,sDAAsD;AACtD,0EAA0E;AAC1E,mDAAmD;AACnD,EAAE;AACF,qCAAqC;AACrC,4CAA4C;AAC5C,mDAAmD;AACnD,iDAAiD;AACjD,IAAI;AACJ,EAAE;AACF,gBAAgB;AAChB,mCAAmC;AACnC,+CAA+C;AAC/C,EAAE;AACF,+EAA+E;AAC/E,EAAE;AACF,oCAAoC;AACpC,yDAAyD;AACzD,MAAM;AACN,EAAE;AACF,2CAA2C;AAC3C,uDAAuD;AACvD,EAAE;AACF,mEAAmE;AACnE,MAAM;AACN,EAAE;AACF,0CAA0C;AAC1C,kBAAkB;AAClB,4BAA4B;AAC5B,gBAAgB;AAChB,QAAQ;AACR,EAAE;AACF,qCAAqC;AACrC,0CAA0C;AAC1C,gBAAgB;AAChB,QAAQ;AACR,EAAE;AACF,gDAAgD;AAChD,MAAM;AACN,IAAI","names":[],"sources":["C:\\Users\\Itay\\projects\\opensources\\http-cache\\projects\\ngneat\\http-cache\\src\\lib\\test\\ttlManager.spec.ts"],"sourcesContent":["// import { Inject, Injectable } from '@angular/core';\n// import { HTTP_CACHE_CONFIG, HttpCacheConfig } from './httpCacheConfig';\n// import { deleteByRegex } from './deleteByRegex';\n//\n// export abstract class TTLManager {\n//   abstract isValid(key: string): boolean;\n//   abstract set(key: string, ttl?: number): void;\n//   abstract delete(key: string | RegExp): void;\n// }\n//\n// @Injectable()\n// export class DefaultTTLManager {\n//   private cache = new Map<string, number>();\n//\n//   constructor(@Inject(HTTP_CACHE_CONFIG) private config: HttpCacheConfig) {}\n//\n//   isValid(key: string): boolean {\n//     return this.cache.get(key) > new Date().getTime();\n//   }\n//\n//   set(key: string, ttl?: number): void {\n//     let resolveTTL = ttl || this.config.ttl.default;\n//\n//     this.cache.set(key, new Date().setMilliseconds(resolveTTL));\n//   }\n//\n//   delete(key?: string | RegExp): void {\n//     if (!key) {\n//       this.cache.clear();\n//       return;\n//     }\n//\n//     if (typeof key === 'string') {\n//       this.cache.delete(key as string);\n//       return;\n//     }\n//\n//     deleteByRegex(key as RegExp, this.cache);\n//   }\n// }\n"],"version":3}