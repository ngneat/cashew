{"file":"C:\\Users\\Itay\\projects\\opensources\\http-cache\\projects\\ngneat\\http-cache\\src\\lib\\test\\httpCacheDecorator.spec.ts","mappings":";;;AAAA,6BAA2B;AAC3B,4CAAmC;AACnC,4DAAgD;AAEhD,IAAM,IAAI,GAAG,IAAI,CAAC;AAElB;IAAA;IAWA,CAAC;IARC,wBAAG,GAAH;QACE,OAAO,YAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAG,CAAC,cAAM,OAAA,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAhB,CAAgB,CAAC,CAAC,CAAC;IACvD,CAAC;IAGD,+BAAU,GAAV;QACE,OAAO,YAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,eAAG,CAAC,cAAM,OAAA,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,EAAhB,CAAgB,CAAC,CAAC,CAAC;IACvD,CAAC;IAPD;QADC,8BAAS,EAAE;;;;yCAGX;IAGD;QADC,8BAAS,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,IAAI,GAAG,CAAC,CAAC;;;;gDAGvD;IACH,iBAAC;CAAA,AAXD,IAWC;AAED,QAAQ,CAAC,WAAW,EAAE;IAEpB,IAAI,UAAsB,CAAC;IAE3B,UAAU,CAAC;QACT,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE;QAC7B,UAAU,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,UAAA,IAAI;YAC7B,UAAU,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,UAAA,KAAK;gBAC9B,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,uCAAuC,EAAE;QAC3C,UAAU,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAA,IAAI;YACpC,IAAI,CAAC,mBAAmB,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;YACnC,UAAU,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAA,KAAK;gBACrC,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAA;AAEJ,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\Itay\\projects\\opensources\\http-cache\\projects\\ngneat\\http-cache\\src\\lib\\test\\httpCacheDecorator.spec.ts"],"sourcesContent":["import {timer} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {HttpCache} from '../httpCacheDecorator';\n\nconst tick = 1000;\n\nclass DummyClass {\n\n  @HttpCache()\n  get() {\n    return timer(tick).pipe(map(() => ({ foo: 'bar' })));\n  }\n\n  @HttpCache({ bufferSize: 1, refCount: false }, tick * 2)\n  getWithTTL() {\n    return timer(tick).pipe(map(() => ({ foo: 'bar' })));\n  }\n}\n\ndescribe('HttpCache', () => {\n\n  let dummyClass: DummyClass;\n\n  beforeEach(() => {\n    dummyClass = new DummyClass();\n  });\n\n  it('should cache the request', () => {\n    dummyClass.get().subscribe(data => {\n      dummyClass.get().subscribe(data2 => {\n        expect(data).toBe(data2);\n      })\n    });\n    jest.advanceTimersByTime(tick);\n  });\n\n  fit('should bust the cache when ttl arrive', () => {\n    dummyClass.getWithTTL().subscribe(data => {\n      jest.advanceTimersByTime(tick * 4);\n      dummyClass.getWithTTL().subscribe(data2 => {\n        console.log(data === data2);\n        expect(data).not.toBe(data2);\n      })\n    });\n    jest.advanceTimersByTime(tick * 4);\n  })\n\n});\n"],"version":3}